{"version":3,"file":"bundle.js","mappings":"oyBAIQA,ECJaC,EAAS,WAC1B,SAAAA,EAAYC,I,4FAAYC,CAAA,KAAAF,GACtBG,OAAOC,eAAeC,KAAM,WAAY,CACtCC,UAAU,EACVC,YAAY,EACZC,cAAc,EACdC,MAAOR,EAAWS,QAAQ,OAAQ,KAEtC,C,UAwBC,O,EAxBAV,E,EAkCA,EAAAW,IAAA,aAAAF,MArBD,SAAkBG,GAChB,IAGuCC,EAHnCC,EAAQ,EACRC,EAAUH,EAAcI,OAAS,EAAEC,E,25BAAAC,CAEbN,GAAa,IAAvC,IAAAK,EAAAE,MAAAN,EAAAI,EAAAG,KAAAC,MAAyC,KAAjCC,EAAcT,EAAAJ,MACpBK,GAASC,EAAUQ,OAAOD,GAC1BP,GACF,CAAC,OAAAS,GAAAP,EAAAQ,EAAAD,EAAA,SAAAP,EAAAS,GAAA,CAED,IAAMC,EAAS,GAAMb,EAAQ,GAC7B,OAAOa,GAAU,EAAIC,OAAOD,GAAU,GACxC,K,EAxBC,EAAAhB,IAAA,aAAAF,MAED,WACE,OAAOJ,KAAKwB,SAASC,OAAO,GAAGC,OAAO,MAAQ1B,KAAKwB,QACrD,GAAC,CAAAlB,IAAA,cAAAF,MAED,WACE,IAAMG,EAAgBP,KAAKwB,SAASG,MAAM,GAAI,GACxCC,EAAUjC,EAAUkC,WAAWtB,GAC/BuB,EAAUnC,EAAUkC,WAAWtB,EAAgBqB,GACrD5B,KAAK+B,QAAUxB,EAAgBqB,EAAUE,CAC3C,GAAC,CAAAxB,IAAA,SAAAF,MAeD,WACE,QAAIJ,KAAKwB,UACmB,iBAAlBxB,KAAKwB,UACa,KAAzBxB,KAAKwB,SAASb,SACdX,KAAKgC,eACRhC,KAAKiC,cAEEjC,KAAK+B,UAAY/B,KAAKwB,SAC/B,M,8EAVC7B,CAAA,CAhCyB,G,mqBDItBD,EAAO,IEFa,oBAAAwC,K,4FAAArC,CAAA,KAAAqC,EAAA,C,QAoBzB,O,EApByBA,E,EAAA,EAAA5B,IAAA,OAAAF,MAC1B,WAAuC,IAAlC+B,EAAGC,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,GAAAA,UAAA,GAAG,IAAWE,EAAGF,UAAAzB,OAAA,QAAA0B,IAAAD,UAAA,GAAAA,UAAA,GAAG,UAC1B,OAAOb,OAAOgB,KAAKC,MAAMD,KAAKE,UAAYH,EAAMH,GAAOA,GACzD,GAAC,CAAA7B,IAAA,YAAAF,MAED,SAAUsC,GACR,OACEA,EAAIf,MAAM,EAAG,GAAK,IAClBe,EAAIf,MAAM,EAAG,GAAK,IAClBe,EAAIf,MAAM,EAAG,GAAK,IAClBe,EAAIf,MAAM,EAAG,GAEjB,GAAC,CAAArB,IAAA,cAAAF,MAED,WACE,IAAMuC,EAAe3C,KAAK4C,OACpBhB,EAAUjC,EAAUkC,WAAWc,GAE/BE,EAAUF,EAAef,EADfjC,EAAUkC,WAAWc,EAAef,GAEpD,OAAO5B,KAAK8C,UAAUD,EACxB,I,uEAACX,CAAA,CApByB,IFGRa,SAASC,cAAc,eAC/BC,UAAYvD,EAAKuC,a","sources":["webpack://gerador-de-cpf/./src/index.js","webpack://gerador-de-cpf/./src/modules/ValidaCPF.js","webpack://gerador-de-cpf/./src/modules/GeraCPF.js"],"sourcesContent":["import GeraCPF from './modules/GeraCPF';\r\nimport './assets/css/style.css';\r\n\r\n(function() {\r\n  const gera = new GeraCPF();\r\n  const cpfGerado = document.querySelector('.cpf-gerado');\r\n  cpfGerado.innerHTML = gera.geraNovoCpf();\r\n})();","export default class ValidaCPF {\r\n    constructor(cpfEnviado) {\r\n      Object.defineProperty(this, 'cpfLimpo', {\r\n        writable: false,\r\n        enumerable: true,\r\n        configurable: false,\r\n        value: cpfEnviado.replace(/\\D+/g, '')\r\n      });\r\n    }\r\n  \r\n    eSequencia() {\r\n      return this.cpfLimpo.charAt(0).repeat(11) === this.cpfLimpo;\r\n    }\r\n  \r\n    geraNovoCpf() {\r\n      const cpfSemDigitos = this.cpfLimpo.slice(0, -2);\r\n      const digito1 = ValidaCPF.geraDigito(cpfSemDigitos);\r\n      const digito2 = ValidaCPF.geraDigito(cpfSemDigitos + digito1);\r\n      this.novoCPF = cpfSemDigitos + digito1 + digito2;\r\n    }\r\n  \r\n    static geraDigito(cpfSemDigitos) {\r\n      let total = 0;\r\n      let reverso = cpfSemDigitos.length + 1;\r\n  \r\n      for(let stringNumerica of cpfSemDigitos) {\r\n        total += reverso * Number(stringNumerica);\r\n        reverso--;\r\n      }\r\n  \r\n      const digito = 11 - (total % 11);\r\n      return digito <= 9 ? String(digito) : '0';\r\n    }\r\n  \r\n    valida() {\r\n      if(!this.cpfLimpo) return false;\r\n      if(typeof this.cpfLimpo !== 'string') return false;\r\n      if(this.cpfLimpo.length !== 11) return false;\r\n      if(this.eSequencia()) return false;\r\n      this.geraNovoCpf();\r\n  \r\n      return this.novoCPF === this.cpfLimpo;\r\n    }\r\n  }","import ValidaCPF from './ValidaCPF';\r\n\r\nexport default class GeraCPF {\r\n  rand(min = 100000000, max = 999999999) {\r\n    return String(Math.floor(Math.random() * (max - min) + min));\r\n  }\r\n\r\n  formatado(cpf) {\r\n    return (\r\n      cpf.slice(0, 3) + '.' +\r\n      cpf.slice(3, 6) + '.' +\r\n      cpf.slice(6, 9) + '-' +\r\n      cpf.slice(9, 11)\r\n    );\r\n  }\r\n\r\n  geraNovoCpf() {\r\n    const cpfSemDigito = this.rand();\r\n    const digito1 = ValidaCPF.geraDigito(cpfSemDigito);\r\n    const digito2 = ValidaCPF.geraDigito(cpfSemDigito + digito1);\r\n    const novoCpf = cpfSemDigito + digito1 + digito2;\r\n    return this.formatado(novoCpf);\r\n  }\r\n}"],"names":["gera","ValidaCPF","cpfEnviado","_classCallCheck","Object","defineProperty","this","writable","enumerable","configurable","value","replace","key","cpfSemDigitos","_step","total","reverso","length","_iterator","_createForOfIteratorHelper","s","n","done","stringNumerica","Number","err","e","f","digito","String","cpfLimpo","charAt","repeat","slice","digito1","geraDigito","digito2","novoCPF","eSequencia","geraNovoCpf","GeraCPF","min","arguments","undefined","max","Math","floor","random","cpf","cpfSemDigito","rand","novoCpf","formatado","document","querySelector","innerHTML"],"sourceRoot":""}